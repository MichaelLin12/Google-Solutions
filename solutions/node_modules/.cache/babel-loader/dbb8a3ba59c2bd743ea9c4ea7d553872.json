{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\12626\\\\OneDrive\\\\ComputerScience\\\\Google-Solutions\\\\solutions\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Home from './Entry/Home';\nimport Login from './Entry/Login';\nimport SignUp from './Entry/SignUp';\nimport ForgetPassword from './Entry/ForgetPassword';\nimport ProtectedRoute from './ProtectedRoute';\nimport { authentication as auth } from \"../firebase.js\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport Market from './Market';\nimport { db, authentication } from \"../firebase.js\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailLoginError: false,\n      passwordLoginError: false,\n      email: '',\n      password: ''\n    };\n  }\n  /**\r\n   * this method returns the current user and is used in\r\n   * the protected route component to test if a user does exist\r\n   * @returns the current user\r\n   */\n\n\n  checkAuthentication() {\n    const user = auth.currentUser;\n    return user;\n  }\n\n  updateEmail(e) {\n    this.setState({\n      email: e.target.value,\n      emailLoginError: false\n    });\n    console.log(e.target.value);\n  }\n\n  updatePassword(e) {\n    this.setState({\n      password: e.target.value,\n      passwordLoginError: false\n    });\n    console.log(e.target.value);\n  }\n\n  async login() {\n    console.log(\"Hello World\");\n    const auth = authentication;\n    signInWithEmailAndPassword(auth, this.state.email, this.state.password).then(userCredential => {\n      // Signed in \n      const user = userCredential.user;\n      console.log(user); // ...\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorMessage);\n      this.setState({\n        emailLoginError: true,\n        passwordLoginError: true\n      });\n    });\n  }\n  /**\r\n   * the render method is a compulsory method in react\r\n   * @returns what is to be rendered as html on webpage\r\n   */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            emailError: this.state.emailLoginError,\n            passwordError: this.state.passwordLoginError,\n            updateEmail: e => {\n              this.updateEmail(e);\n            },\n            updatePassword: e => {\n              this.updatePassword(e);\n            },\n            login: () => {\n              this.login();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/forgetPassword\",\n          element: /*#__PURE__*/_jsxDEV(ForgetPassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/market\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            func: this.checkAuthentication,\n            children: /*#__PURE__*/_jsxDEV(Market, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/12626/OneDrive/ComputerScience/Google-Solutions/solutions/src/components/App.js"],"names":["React","Component","Routes","Route","Home","Login","SignUp","ForgetPassword","ProtectedRoute","authentication","auth","Navigate","useNavigate","Market","db","doc","getDoc","signInWithEmailAndPassword","createUserWithEmailAndPassword","App","constructor","props","state","emailLoginError","passwordLoginError","email","password","checkAuthentication","user","currentUser","updateEmail","e","setState","target","value","console","log","updatePassword","login","then","userCredential","catch","error","errorCode","code","errorMessage","message","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Routes, Route} from 'react-router-dom';\r\nimport Home from './Entry/Home';\r\nimport Login from './Entry/Login';\r\nimport SignUp from './Entry/SignUp';\r\nimport ForgetPassword from './Entry/ForgetPassword';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport { authentication as auth} from \"../firebase.js\";\r\nimport {Navigate, useNavigate} from \"react-router-dom\";\r\nimport Market from './Market';\r\nimport {db,authentication} from \"../firebase.js\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      emailLoginError:false,\r\n      passwordLoginError:false,\r\n      email:'',\r\n      password:''\r\n    }\r\n  }\r\n\r\n  /**\r\n   * this method returns the current user and is used in\r\n   * the protected route component to test if a user does exist\r\n   * @returns the current user\r\n   */\r\n  checkAuthentication(){\r\n    const user = auth.currentUser;\r\n    return user;\r\n  }\r\n\r\n  updateEmail(e){\r\n    this.setState({email:e.target.value, emailLoginError:false})\r\n    console.log(e.target.value)\r\n  }\r\n\r\n  updatePassword(e){\r\n    this.setState({password:e.target.value, passwordLoginError:false})\r\n    console.log(e.target.value)\r\n  }\r\n\r\n  async login(){\r\n    console.log(\"Hello World\");\r\n    const auth = authentication;\r\n    signInWithEmailAndPassword(auth, this.state.email, this.state.password)\r\n      .then((userCredential) => {\r\n        // Signed in \r\n        const user = userCredential.user;\r\n        console.log(user)\r\n        \r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        console.log(errorMessage)\r\n        this.setState({emailLoginError:true, passwordLoginError:true});\r\n  });\r\n  }\r\n\r\n  /**\r\n   * the render method is a compulsory method in react\r\n   * @returns what is to be rendered as html on webpage\r\n   */\r\n  render() {\r\n    return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home/>}/>\r\n        <Route path=\"/login\" element={<Login emailError={this.state.emailLoginError} passwordError={this.state.passwordLoginError} updateEmail={(e)=>{this.updateEmail(e)}} updatePassword={(e)=>{this.updatePassword(e)}} login={()=>{this.login()}}/>}/>\r\n        <Route path=\"/forgetPassword\" element={<ForgetPassword/>}/>\r\n        <Route path=\"/signup\" element={<SignUp/>}/>\r\n        <Route path=\"/market\" \r\n        element={\r\n        <ProtectedRoute func={this.checkAuthentication}>\r\n          <Market/>\r\n        </ProtectedRoute>}/>\r\n        <Route path=\"*\" element={<Navigate to=\"/\"/>}/>\r\n      </Routes>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}