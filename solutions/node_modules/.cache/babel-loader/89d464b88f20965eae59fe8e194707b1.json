{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\12626\\\\OneDrive\\\\ComputerScience\\\\Google-Solutions\\\\solutions\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Home from './Entry/Home';\nimport Login from './Entry/Login';\nimport SignUp from './Entry/SignUp';\nimport ForgetPassword from './Entry/ForgetPassword';\nimport ProtectedRoute from './ProtectedRoute';\nimport { authentication as auth } from \"../firebase.js\";\nimport { Navigate } from \"react-router-dom\";\nimport Market from './Market';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usernameLoginError: false,\n      passwordLoginError: false,\n      username: '',\n      password: ''\n    };\n  }\n  /**\r\n   * this method returns the current user and is used in\r\n   * the protected route component to test if a user does exist\r\n   * @returns the current user\r\n   */\n\n\n  checkAuthentication() {\n    const user = auth.currentUser;\n    return user;\n  }\n\n  changeLoginUserName() {\n    this.state.usernameLoginError ? this.setState({\n      usernameLoginError: false\n    }) : this.setState({\n      usernameLoginError: true\n    });\n  }\n\n  changeLoginPassword() {\n    this.state.usernameLoginError ? this.setState({\n      passwordLoginError: false\n    }) : this.setState({\n      passwordLoginError: true\n    });\n  }\n\n  updateUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n    console.log(e.target.value);\n  }\n\n  updatePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n    console.log(e.target.value);\n  }\n\n  login() {}\n  /**\r\n   * the render method is a compulsory method in react\r\n   * @returns what is to be rendered as html on webpage\r\n   */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            usernameError: this.state.usernameLoginError,\n            passwordError: this.state.passwordLoginError,\n            changePasswordError: () => {\n              this.changeLoginPassword();\n            },\n            changeUsernameError: () => {\n              this.changeLoginUserName();\n            },\n            updateUsername: e => {\n              this.updateUsername(e);\n            },\n            updatePassword: e => {\n              this.updatePassword(e);\n            },\n            login: () => {\n              this.login;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/forgetPassword\",\n          element: /*#__PURE__*/_jsxDEV(ForgetPassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/market\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            func: this.checkAuthentication,\n            children: /*#__PURE__*/_jsxDEV(Market, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/12626/OneDrive/ComputerScience/Google-Solutions/solutions/src/components/App.js"],"names":["React","Component","Routes","Route","Home","Login","SignUp","ForgetPassword","ProtectedRoute","authentication","auth","Navigate","Market","App","constructor","props","state","usernameLoginError","passwordLoginError","username","password","checkAuthentication","user","currentUser","changeLoginUserName","setState","changeLoginPassword","updateUsername","e","target","value","console","log","updatePassword","login","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Routes, Route} from 'react-router-dom';\r\nimport Home from './Entry/Home';\r\nimport Login from './Entry/Login';\r\nimport SignUp from './Entry/SignUp';\r\nimport ForgetPassword from './Entry/ForgetPassword';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport { authentication as auth} from \"../firebase.js\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport Market from './Market';\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      usernameLoginError:false,\r\n      passwordLoginError:false,\r\n      username:'',\r\n      password:''\r\n    }\r\n  }\r\n\r\n  /**\r\n   * this method returns the current user and is used in\r\n   * the protected route component to test if a user does exist\r\n   * @returns the current user\r\n   */\r\n  checkAuthentication(){\r\n    const user = auth.currentUser;\r\n    return user;\r\n  }\r\n\r\n  changeLoginUserName(){\r\n    (this.state.usernameLoginError)? this.setState({usernameLoginError:false}):this.setState({usernameLoginError:true});\r\n  }\r\n\r\n  changeLoginPassword(){\r\n    (this.state.usernameLoginError)? this.setState({passwordLoginError:false}):this.setState({passwordLoginError:true});\r\n  }\r\n\r\n  updateUsername(e){\r\n    this.setState({username:e.target.value})\r\n    console.log(e.target.value)\r\n  }\r\n\r\n  updatePassword(e){\r\n    this.setState({password:e.target.value})\r\n    console.log(e.target.value)\r\n  }\r\n\r\n  login(){\r\n    \r\n  }\r\n\r\n  /**\r\n   * the render method is a compulsory method in react\r\n   * @returns what is to be rendered as html on webpage\r\n   */\r\n  render() {\r\n    return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home/>}/>\r\n        <Route path=\"/login\" element={<Login usernameError={this.state.usernameLoginError} passwordError={this.state.passwordLoginError} changePasswordError={()=>{this.changeLoginPassword()}} changeUsernameError={()=>{this.changeLoginUserName()}} updateUsername={(e)=>{this.updateUsername(e)}} updatePassword={(e)=>{this.updatePassword(e)}} login={()=>{this.login}}/>}/>\r\n        <Route path=\"/forgetPassword\" element={<ForgetPassword/>}/>\r\n        <Route path=\"/signup\" element={<SignUp/>}/>\r\n        <Route path=\"/market\" \r\n        element={\r\n        <ProtectedRoute func={this.checkAuthentication}>\r\n          <Market/>\r\n        </ProtectedRoute>}/>\r\n        <Route path=\"*\" element={<Navigate to=\"/\"/>}/>\r\n      </Routes>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}