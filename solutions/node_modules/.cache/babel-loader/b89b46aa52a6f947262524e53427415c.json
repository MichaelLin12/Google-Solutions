{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\12626\\\\OneDrive\\\\ComputerScience\\\\Google-Solutions\\\\solutions\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Home from './Entry/Home';\nimport Login from './Entry/Login';\nimport SignUp from './Entry/SignUp';\nimport ForgetPassword from './Entry/ForgetPassword';\nimport ProtectedRoute from './ProtectedRoute';\nimport { authentication as auth } from \"../firebase.js\";\nimport { Navigate } from \"react-router-dom\";\nimport Market from './Market';\nimport { db, authentication } from \"../firebase.js\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usernameLoginError: false,\n      passwordLoginError: false,\n      username: '',\n      password: ''\n    };\n  }\n  /**\r\n   * this method returns the current user and is used in\r\n   * the protected route component to test if a user does exist\r\n   * @returns the current user\r\n   */\n\n\n  checkAuthentication() {\n    const user = auth.currentUser;\n    return user;\n  }\n\n  updateUsername(e) {\n    this.setState({\n      username: e.target.value,\n      usernameLoginError: false\n    });\n    console.log(e.target.value);\n  }\n\n  updatePassword(e) {\n    this.setState({\n      password: e.target.value,\n      passwordLoginError: false\n    });\n    console.log(e.target.value);\n  }\n\n  async login() {\n    console.log(\"Hello World\");\n    const docRef = doc(db, \"Users\", this.state.username);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      console.log(\"Document data:\", docSnap.data());\n      const obj = docSnap.data();\n\n      if (this.state.password !== obj.password) {\n        console.log(\"Wrong Password\");\n        this.setState({\n          passwordLoginError: true\n        });\n      } else {\n        const auth = authentication;\n        signInWithEmailAndPassword(auth, obj.email, obj.password).then(userCredential => {\n          // Signed in \n          console.log(\"Signed In\");\n          const user = userCredential.user;\n          console.log(user); // ...\n        }).catch(error => {\n          console.log(\"Error\", error);\n        });\n      }\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n      this.setState({\n        usernameLoginError: true,\n        passwordLoginError: true\n      });\n    }\n  }\n  /**\r\n   * the render method is a compulsory method in react\r\n   * @returns what is to be rendered as html on webpage\r\n   */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            usernameError: this.state.usernameLoginError,\n            passwordError: this.state.passwordLoginError,\n            updateUsername: e => {\n              this.updateUsername(e);\n            },\n            updatePassword: e => {\n              this.updatePassword(e);\n            },\n            login: () => {\n              this.login();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/forgetPassword\",\n          element: /*#__PURE__*/_jsxDEV(ForgetPassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/market\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            func: this.checkAuthentication,\n            children: /*#__PURE__*/_jsxDEV(Market, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/12626/OneDrive/ComputerScience/Google-Solutions/solutions/src/components/App.js"],"names":["React","Component","Routes","Route","Home","Login","SignUp","ForgetPassword","ProtectedRoute","authentication","auth","Navigate","Market","db","doc","getDoc","signInWithEmailAndPassword","createUserWithEmailAndPassword","App","constructor","props","state","usernameLoginError","passwordLoginError","username","password","checkAuthentication","user","currentUser","updateUsername","e","setState","target","value","console","log","updatePassword","login","docRef","docSnap","exists","data","obj","email","then","userCredential","catch","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Routes, Route} from 'react-router-dom';\r\nimport Home from './Entry/Home';\r\nimport Login from './Entry/Login';\r\nimport SignUp from './Entry/SignUp';\r\nimport ForgetPassword from './Entry/ForgetPassword';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport { authentication as auth} from \"../firebase.js\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport Market from './Market';\r\nimport {db,authentication} from \"../firebase.js\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      usernameLoginError:false,\r\n      passwordLoginError:false,\r\n      username:'',\r\n      password:''\r\n    }\r\n  }\r\n\r\n  /**\r\n   * this method returns the current user and is used in\r\n   * the protected route component to test if a user does exist\r\n   * @returns the current user\r\n   */\r\n  checkAuthentication(){\r\n    const user = auth.currentUser;\r\n    return user;\r\n  }\r\n\r\n  updateUsername(e){\r\n    this.setState({username:e.target.value, usernameLoginError:false})\r\n    console.log(e.target.value)\r\n  }\r\n\r\n  updatePassword(e){\r\n    this.setState({password:e.target.value, passwordLoginError:false})\r\n    console.log(e.target.value)\r\n  }\r\n\r\n  async login(){\r\n    console.log(\"Hello World\");\r\n\r\n    const docRef = doc(db, \"Users\", this.state.username);\r\n    const docSnap = await getDoc(docRef);\r\n\r\n    if (docSnap.exists()) {\r\n      console.log(\"Document data:\", docSnap.data());\r\n      const obj = docSnap.data();\r\n      if(this.state.password !== obj.password){\r\n        console.log(\"Wrong Password\");\r\n        this.setState({passwordLoginError:true})\r\n      }\r\n      else{\r\n        const auth = authentication;\r\n        signInWithEmailAndPassword(auth, obj.email, obj.password)\r\n          .then((userCredential) => {\r\n            // Signed in \r\n            console.log(\"Signed In\");\r\n            const user = userCredential.user;\r\n            console.log(user)\r\n            // ...\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error\",error)\r\n          });\r\n      }\r\n    } else {\r\n      // doc.data() will be undefined in this case\r\n      console.log(\"No such document!\");\r\n      this.setState({usernameLoginError:true, passwordLoginError:true});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * the render method is a compulsory method in react\r\n   * @returns what is to be rendered as html on webpage\r\n   */\r\n  render() {\r\n    return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home/>}/>\r\n        <Route path=\"/login\" element={<Login usernameError={this.state.usernameLoginError} passwordError={this.state.passwordLoginError} updateUsername={(e)=>{this.updateUsername(e)}} updatePassword={(e)=>{this.updatePassword(e)}} login={()=>{this.login()}}/>}/>\r\n        <Route path=\"/forgetPassword\" element={<ForgetPassword/>}/>\r\n        <Route path=\"/signup\" element={<SignUp/>}/>\r\n        <Route path=\"/market\" \r\n        element={\r\n        <ProtectedRoute func={this.checkAuthentication}>\r\n          <Market/>\r\n        </ProtectedRoute>}/>\r\n        <Route path=\"*\" element={<Navigate to=\"/\"/>}/>\r\n      </Routes>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}